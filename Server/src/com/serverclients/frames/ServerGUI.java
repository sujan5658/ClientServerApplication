/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.serverclients.frames;

import com.serverclients.pojos.Client;
import com.serverclients.services.ConnectionChecker;
import com.serverclients.services.ServerService;
import com.serverclients.services.StatusBar;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.DataOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author Sujan Koju
 */
public class ServerGUI extends javax.swing.JFrame {

    /**
     * Creates new form ServerGUI
     */
    ServerDetails serverDetails = new ServerDetails();
    private boolean serverStatus=false;
    private int port=0;
    private ArrayList<Client> clients;
    private Thread serverService;
    private HashMap<String,ClientDetails> clientsDetails;
    public ServerGUI() {
        initComponents();
        this.clients = new ArrayList<Client>();
        DefaultTableModel model = (DefaultTableModel)tblClients.getModel();
        model.setRowCount(0);
        this.clientsDetails = new HashMap<String,ClientDetails>();
        this.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                if(serverStatus){
                    int choice = JOptionPane.showConfirmDialog(null,"Server is Running. All the connection will be lost. Are you sure to exit ?","Confirmation",JOptionPane.YES_NO_OPTION);
                    if(choice==JOptionPane.YES_OPTION){
                        stopServer();
                        dispose();
                        System.exit(1);
                    }
                }
                else{
                    dispose();
                    System.exit(1);
                }
            }
        });
    }
    private void stopServer(){
        try {
            DataOutputStream dataOut;
            for(Client client:this.clients){
                dataOut = new DataOutputStream(client.getSocket().getOutputStream());
                dataOut.writeUTF("ServerStopped");
                dataOut.flush();
            }
            ServerService.serverSocket.close();
            
        } catch (IOException ex) {
            Logger.getLogger(ServerGUI.class.getName()).log(Level.SEVERE, null, ex);
        } 
        finally{
            this.clients.removeAll(this.clients);
            ServerService.threadStatus=false;
            StatusBar.threadStatus = false;
            ConnectionChecker.threadStatus = false;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnStopServer = new javax.swing.JLabel();
        btnStartServer = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnExit = new javax.swing.JLabel();
        btnAbout = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnViewClientDetails = new javax.swing.JLabel();
        btnViewServerDetails = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lvlServerStatus = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        lvlMessage = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblClients = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Remote Server");
        setName("mainFrame"); // NOI18N
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(153, 153, 255));
        mainPanel.setMaximumSize(new java.awt.Dimension(874, 439));
        mainPanel.setPreferredSize(new java.awt.Dimension(874, 439));

        leftPanel.setBackground(new java.awt.Color(0, 102, 0));

        jLabel1.setBackground(new java.awt.Color(51, 0, 102));
        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/logo4.png"))); // NOI18N
        jLabel1.setText("  Server");
        jLabel1.setOpaque(true);

        btnStopServer.setBackground(new java.awt.Color(153, 0, 153));
        btnStopServer.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnStopServer.setForeground(new java.awt.Color(255, 255, 255));
        btnStopServer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/stopServer.png"))); // NOI18N
        btnStopServer.setText("Stop Server");
        btnStopServer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStopServer.setIconTextGap(18);
        btnStopServer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStopServerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStopServerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStopServerMouseExited(evt);
            }
        });

        btnStartServer.setBackground(new java.awt.Color(153, 0, 153));
        btnStartServer.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnStartServer.setForeground(new java.awt.Color(255, 255, 255));
        btnStartServer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/startServer.png"))); // NOI18N
        btnStartServer.setText("Start Server");
        btnStartServer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStartServer.setIconTextGap(18);
        btnStartServer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStartServerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStartServerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStartServerMouseExited(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(51, 0, 102));
        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Server Section");
        jLabel2.setOpaque(true);

        btnExit.setBackground(new java.awt.Color(153, 0, 153));
        btnExit.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/logout.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.setIconTextGap(18);
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });

        btnAbout.setBackground(new java.awt.Color(153, 0, 153));
        btnAbout.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnAbout.setForeground(new java.awt.Color(255, 255, 255));
        btnAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/info.png"))); // NOI18N
        btnAbout.setText("About");
        btnAbout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAbout.setIconTextGap(18);
        btnAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAboutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAboutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAboutMouseExited(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(51, 0, 102));
        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("General Section");
        jLabel3.setOpaque(true);

        jLabel6.setBackground(new java.awt.Color(51, 0, 102));
        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 2, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Client Section");
        jLabel6.setOpaque(true);

        btnViewClientDetails.setBackground(new java.awt.Color(153, 0, 153));
        btnViewClientDetails.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnViewClientDetails.setForeground(new java.awt.Color(255, 255, 255));
        btnViewClientDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/details.png"))); // NOI18N
        btnViewClientDetails.setText("View Client Details");
        btnViewClientDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewClientDetails.setIconTextGap(18);
        btnViewClientDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewClientDetailsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnViewClientDetailsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnViewClientDetailsMouseExited(evt);
            }
        });

        btnViewServerDetails.setBackground(new java.awt.Color(153, 0, 153));
        btnViewServerDetails.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnViewServerDetails.setForeground(new java.awt.Color(255, 255, 255));
        btnViewServerDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/serverDetail.png"))); // NOI18N
        btnViewServerDetails.setText("View Server Details");
        btnViewServerDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewServerDetails.setIconTextGap(18);
        btnViewServerDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewServerDetailsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnViewServerDetailsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnViewServerDetailsMouseExited(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnStopServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStartServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAbout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewClientDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewServerDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewServerDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnStartServer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnStopServer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewClientDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAbout, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        rightPanel.setBackground(new java.awt.Color(102, 255, 102));

        jLabel4.setBackground(new java.awt.Color(51, 0, 102));
        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Server Status");
        jLabel4.setOpaque(true);

        lvlServerStatus.setBackground(new java.awt.Color(51, 0, 102));
        lvlServerStatus.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        lvlServerStatus.setForeground(new java.awt.Color(255, 255, 255));
        lvlServerStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lvlServerStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/stopServer.png"))); // NOI18N
        lvlServerStatus.setText("Stopped");
        lvlServerStatus.setIconTextGap(15);
        lvlServerStatus.setOpaque(true);

        lvlMessage.setBackground(new java.awt.Color(51, 0, 102));
        lvlMessage.setFont(new java.awt.Font("Segoe Print", 1, 11)); // NOI18N
        lvlMessage.setForeground(new java.awt.Color(255, 255, 255));
        lvlMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lvlMessage.setText("Please start the server");
        lvlMessage.setOpaque(true);

        tblClients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "SN", "Client IP", "User Name", "Connected Time", "Start Time", "End Time", "Msg Status", "Client Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblClients);
        if (tblClients.getColumnModel().getColumnCount() > 0) {
            tblClients.getColumnModel().getColumn(0).setMinWidth(40);
            tblClients.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblClients.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lvlServerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                            .addComponent(lvlMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(lvlServerStatus))
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addComponent(lvlMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1053, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1069, 497));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnStopServerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStopServerMouseEntered
        Border border = BorderFactory.createLineBorder(Color.WHITE, 1);
        this.btnStopServer.setBorder(border);
    }//GEN-LAST:event_btnStopServerMouseEntered

    private void btnStopServerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStopServerMouseExited
        Border border = BorderFactory.createEmptyBorder();
        this.btnStopServer.setBorder(border);
    }//GEN-LAST:event_btnStopServerMouseExited

    private void btnStartServerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartServerMouseEntered
        Border border = BorderFactory.createLineBorder(Color.WHITE, 1);
        this.btnStartServer.setBorder(border);
    }//GEN-LAST:event_btnStartServerMouseEntered

    private void btnStartServerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartServerMouseExited
        Border border = BorderFactory.createEmptyBorder();
        this.btnStartServer.setBorder(border);
    }//GEN-LAST:event_btnStartServerMouseExited

    private void btnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseEntered
        Border border = BorderFactory.createLineBorder(Color.WHITE, 1);
        this.btnExit.setBorder(border);
    }//GEN-LAST:event_btnExitMouseEntered

    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
        Border border = BorderFactory.createEmptyBorder();
        this.btnExit.setBorder(border);
    }//GEN-LAST:event_btnExitMouseExited

    private void btnAboutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAboutMouseEntered
        Border border = BorderFactory.createLineBorder(Color.WHITE, 1);
        this.btnAbout.setBorder(border);
    }//GEN-LAST:event_btnAboutMouseEntered

    private void btnAboutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAboutMouseExited
        Border border = BorderFactory.createEmptyBorder();
        this.btnAbout.setBorder(border);
    }//GEN-LAST:event_btnAboutMouseExited

    private void btnViewClientDetailsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewClientDetailsMouseEntered
        Border border = BorderFactory.createLineBorder(Color.WHITE, 1);
        this.btnViewClientDetails.setBorder(border);
    }//GEN-LAST:event_btnViewClientDetailsMouseEntered

    private void btnViewClientDetailsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewClientDetailsMouseExited
        Border border = BorderFactory.createEmptyBorder();
        this.btnViewClientDetails.setBorder(border);
    }//GEN-LAST:event_btnViewClientDetailsMouseExited

    private void btnViewServerDetailsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewServerDetailsMouseEntered
        Border border = BorderFactory.createLineBorder(Color.WHITE, 1);
        this.btnViewServerDetails.setBorder(border);
    }//GEN-LAST:event_btnViewServerDetailsMouseEntered

    private void btnViewServerDetailsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewServerDetailsMouseExited
        Border border = BorderFactory.createEmptyBorder();
        this.btnViewServerDetails.setBorder(border);
    }//GEN-LAST:event_btnViewServerDetailsMouseExited

    private void btnViewServerDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewServerDetailsMouseClicked
        if(!this.serverDetails.isActive()){
            this.serverDetails = new ServerDetails();
            this.serverDetails.setVisible(true);
            this.serverDetails.setPort(this.port);
        }
    }//GEN-LAST:event_btnViewServerDetailsMouseClicked

    private void btnExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseClicked
        int choice = JOptionPane.showConfirmDialog(null,"Are you sure to Exit ?","Confirmation",JOptionPane.INFORMATION_MESSAGE);
        if(choice==0){
            this.stopServer();
            System.exit(1);
            this.dispose();
        }
    }//GEN-LAST:event_btnExitMouseClicked

    private void btnStartServerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartServerMouseClicked
        if(!this.serverStatus){
            this.serverStatus = true;
            for(int i=8085;i<=10024;i++){
                try{
                    this.port = i;
                    this.serverService = new ServerService(this,this.port);
                    this.serverService.start();
                    Thread statusBar = new StatusBar(this);
                    statusBar.start();
                    break;
                }
                catch(IOException er){
                    System.out.println("Error : "+er.getMessage());
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Server already running","Already Running",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnStartServerMouseClicked

    private void btnStopServerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStopServerMouseClicked
        if(this.serverStatus){
            int choice = JOptionPane.showConfirmDialog(null,"Are you sure to stop ?","Confirmation",JOptionPane.INFORMATION_MESSAGE);
            if(choice==0){
                this.stopServer();
                this.port=0;
                this.lvlServerStatus.setText("Stopped");
                this.lvlServerStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/stopServer.png")));
                this.lvlMessage.setText("Please start the server.");
                this.progressBar.setValue(0);
                this.serverStatus = false;
                DefaultTableModel model = (DefaultTableModel)tblClients.getModel();
                model.setRowCount(0);
            }
        }
    }//GEN-LAST:event_btnStopServerMouseClicked
    private Client getSpecificClient(String ip){
        for(Client client : this.clients){
            if(client.getIpAddress().equals(ip)){
                return client;
            }
        }
        return null;
    }
    public void setIdleTurnOffTime(String clientIp,int idleTime){
        for(Client client: this.clients){
            if(client.getIpAddress().equals(clientIp)){
                client.setIdleTurnOffTime(idleTime);
            }
        }
    }
    public void setMessageInClientDetails(String message,String clientIp){
        if(this.clientsDetails.containsKey(clientIp)){
            this.clientsDetails.get(clientIp).setMessageFromClient(message);
        }
        else{
            for(int i=0;i<tblClients.getRowCount();i++){
                if(tblClients.getValueAt(i,1).equals(clientIp)){
                    tblClients.setValueAt("NEW", i,6);
                    break;
                }
            }
        }
    }
    public void removeClientDetails(String ip){
        this.clientsDetails.remove(ip);
    }
    private void btnViewClientDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewClientDetailsMouseClicked
        int rowIndex = tblClients.getSelectedRow();
        if(rowIndex==-1){
            JOptionPane.showMessageDialog(null,"Please select any row in the table.","Selection Needed",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            String clientIpAddress = tblClients.getValueAt(rowIndex,1).toString();
            
            if(!this.clientsDetails.containsKey(clientIpAddress)){
                Client c = new Client();
                c = this.getSpecificClient(clientIpAddress);
                if(c!=null){
                    ClientDetails cd = new ClientDetails();
                    cd.setVisible(true);
                    cd.setValues(this,c,rowIndex);
                    tblClients.setValueAt("NONE", rowIndex, 6);
                    this.clientsDetails.put(clientIpAddress, cd);
                }
                else{
                    JOptionPane.showMessageDialog(null,"Invalid Client Selection","Null Client",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnViewClientDetailsMouseClicked

    private void btnAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAboutMouseClicked
        JOptionPane.showMessageDialog(null,"Server Version 1.0.0","About Server",JOptionPane.OK_OPTION,new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/logo4.png")));
    }//GEN-LAST:event_btnAboutMouseClicked
    /** User defined methods starts **/
    public void setTimerForClients(String ip,String startTime,String endTime,int rowIndex){
        for(Client client:this.clients){
            if(client.getIpAddress().equals(ip)){
                client.setStartTime(startTime);
                client.setEndTime(endTime);
                tblClients.setValueAt(startTime,rowIndex,4);
                tblClients.setValueAt(endTime,rowIndex,5);
            }
        }
    }
    public void setServerStartMessage(String message){
        this.lvlServerStatus.setText("Running");
        this.lvlServerStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/serverclients/images/startServer.png")));
        this.lvlMessage.setText(message);
    }
    public void fillStatusBar(int value){
        this.progressBar.setValue(value);
    }
    private void setTable(){
        DefaultTableModel model = (DefaultTableModel)tblClients.getModel();
        model.setRowCount(0);
        int i=0;
        for(Client clnt : this.clients){
            i++;
            model.addRow(new Object[]{i,clnt.getIpAddress(),clnt.getUserName(),clnt.getConnectedTime(),clnt.getStartTime(),clnt.getEndTime(),"NONE","ONLINE"});
        }
    }
    public void addDataInTable(Client client){
        this.clients.add(client);
        this.setTable();
    }
    public void disconnectClient(String clientIp){
        for(Client client: this.clients){
            if(this.clientsDetails.containsKey(clientIp)){
                this.clientsDetails.get(clientIp).dispose();
                this.clientsDetails.remove(clientIp);
            }
            if(client.getIpAddress().equals(clientIp)){
                this.clients.remove(client);
                this.setTable();
                break;
            }
        }
    }
    
    public void setClientStatus(String status,String clientIp){
        for(int i=0;i<this.clients.size();i++){
            if(this.clients.get(i).getIpAddress().equals(clientIp)){
                tblClients.setValueAt(status,i,7);
            }
        }
    }
    //User defined methods ends
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAbout;
    private javax.swing.JLabel btnExit;
    private javax.swing.JLabel btnStartServer;
    private javax.swing.JLabel btnStopServer;
    private javax.swing.JLabel btnViewClientDetails;
    private javax.swing.JLabel btnViewServerDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel lvlMessage;
    private javax.swing.JLabel lvlServerStatus;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JTable tblClients;
    // End of variables declaration//GEN-END:variables
}
